}
RawdataBF <- P10JPRaw%>%
bind_rows(P13MGMRaw,P14FGLRaw,P18ACSRaw,P1MMSRaw,P20RTGRaw,P21PCRaw,P22RicRaw,P23EMRaw,P25SGRaw,P26KaRaw,P27YRaw,P28BeRaw,P29MLRaw,P2CPSRaw,P30JuRaw,P31IsRaw,P32VaRaw,P33SERaw,P3JMURaw,P4CGMRaw,P5LSRaw,P6CGBRaw,P7DRRaw)%>%
mutate(SubjectID = stringr::str_remove(pattern = "_.*", Subject), SubjectID = sub("x","",SubjectID), SubjectID = sub("y","",SubjectID), SubjectID = sub("P","",SubjectID), RT = as.double(RT), Pairs = paste(IT1, IT2))%>%
merge(AllStimuli, by = "Pairs")
ItemNumber <- array(1: 676)
same <- tibble( Pairs = paste (letters, letters))%>%
mutate(Order = 0)
different1<- t(combn(letters, 2))%>%
as_data_frame()%>%
mutate(Pairs = paste(V1, V2),
Order = 1)%>%
select(Pairs, Order)
different2 <- t(combn(letters, 2))%>%
as_data_frame()%>%
mutate(Pairs = paste(V2, V1),
Order = 2)%>%
select(Pairs, Order)
AllStimuli <-  bind_rows(same,different1, different2)%>%
bind_cols(ItemNumber)%>%
rename(ItNumber = "...3")
files <- list.files(pattern="*.RData")
for (i in 1:length(files)) {
load(files[i])
}
RawdataBF <- P10JPRaw%>%
bind_rows(P13MGMRaw,P14FGLRaw,P18ACSRaw,P1MMSRaw,P20RTGRaw,P21PCRaw,P22RicRaw,P23EMRaw,P25SGRaw,P26KaRaw,P27YRaw,P28BeRaw,P29MLRaw,P2CPSRaw,P30JuRaw,P31IsRaw,P32VaRaw,P33SERaw,P3JMURaw,P4CGMRaw,P5LSRaw,P6CGBRaw,P7DRRaw)%>%
mutate(SubjectID = stringr::str_remove(pattern = "_.*", Subject), SubjectID = sub("x","",SubjectID), SubjectID = sub("y","",SubjectID), SubjectID = sub("P","",SubjectID), RT = as.double(RT), Pairs = paste(IT1, IT2))%>%
merge(AllStimuli, by = "Pairs")
#save(RawdataBF, file = "RawdataBF.RData")
# Seed for random number generation
set.seed(142)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
BrailleDotsTable <- miceadds::load.Rdata2( filename="BrailleDotsTable.RData")
ItemNumber <- array(1: 676)
same <- tibble( Pairs = paste (letters, letters))%>%
mutate(Order = 0)
different1<- t(combn(letters, 2))%>%
as_data_frame()%>%
mutate(Pairs = paste(V1, V2),
Order = 1)%>%
select(Pairs, Order)
different2 <- t(combn(letters, 2))%>%
as_data_frame()%>%
mutate(Pairs = paste(V2, V1),
Order = 2)%>%
select(Pairs, Order)
AllStimuli <-  bind_rows(same,different1, different2)%>%
bind_cols(ItemNumber)%>%
rename(ItNumber = "...3")
files <- list.files(pattern="*.RData")
for (i in 1:length(files)) {
load(files[i])
}
RawdataBF <- P10JPRaw%>%
bind_rows(P13MGMRaw,P14FGLRaw,P18ACSRaw,P1MMSRaw,P20RTGRaw,P21PCRaw,P22RicRaw,P23EMRaw,P25SGRaw,P26KaRaw,P27YRaw,P28BeRaw,P29MLRaw,P2CPSRaw,P30JuRaw,P31IsRaw,P32VaRaw,P33SERaw,P3JMURaw,P4CGMRaw,P5LSRaw,P6CGBRaw,P7DRRaw)%>%
mutate(SubjectID = stringr::str_remove(pattern = "_.*", Subject), SubjectID = sub("x","",SubjectID), SubjectID = sub("y","",SubjectID), SubjectID = sub("P","",SubjectID), RT = as.double(RT), Pairs = paste(IT1, IT2))%>%
merge(AllStimuli, by = "Pairs")
#save(RawdataBF, file = "RawdataBF.RData")
RawdataBF_k <- RawdataBF%>%
filter(KEY == "m" | KEY == "n")
CleanBF<- RawdataBF_k%>%
drop_na()%>%
filter(RT > .6 & RT < 12)
CleanBF<- RawdataBF_k%>%
drop_na()%>%
filter(RT > .6 & RT < 12)
CleanBF
Different.blind<- CleanBF%>%
filter(Rubric == "n")
matrix.acc.blind<-tapply(Different.blind$Accuracy, list(Different.blind$IT1, Different.blind$IT2),mean)%>%
round(3)
# Can we make it symmetric?
Acc.Order1 <- Different.blind%>%
filter(Order==1)%>%
group_by(ItNumber,Pairs)%>%
summarise(MAcc1 = mean(Accuracy))%>%
ungroup()
Acc.Order2 <-Different.blind%>%
filter(Order==2)%>%
group_by(ItNumber,Pairs)%>%
summarise(MAcc2 = mean(Accuracy))%>%
ungroup()
Acc.orders <- bind_cols(Acc.Order1,Acc.Order2)%>%
mutate(difference = MAcc1 - MAcc2,
OrderMatters = if_else(difference > (abs(.05)),"T",""))
t.test(Acc.orders$MAcc1,Acc.orders$MAcc2, paired = T)
## YES
## for those whose acc differ in more than 5%:
n_acc<-Acc.orders%>%
filter(OrderMatters=="T") #33/325 differ in more than 5% accuracy.
sym.acc.matrix <- (matrix.acc + t(matrix.acc))/2
t.test(Acc.orders$MAcc1,Acc.orders$MAcc2, paired = T)
sym.acc.matrix.blind <- (matrix.acc.blind + t(matrix.acc.blind))/2
CorrectDifferent.norm.blind<- Different.blind%>%
filter(Accuracy == 1)%>%
mutate(RTms = RT*1000)%>%
group_by(SubjectID)%>%
mutate(MRT_subj = mean(RTms))%>%
ungroup()%>%
mutate(normTime = RTms/MRT_subj)
matrix.rt.blind<-tapply(CorrectDifferent.norm.blind$normTime, list(CorrectDifferent.norm.blind$IT1, CorrectDifferent.norm.blind$IT2),mean)%>%
round(3)
RT.Order1.blind <- CorrectDifferent.norm.blind%>%
filter(Order==1)%>%
group_by(ItNumber,Pairs)%>%
summarise(MNRT1 = mean(normTime))%>%
ungroup()
RT.Order2.blind <- CorrectDifferent.norm.blind%>%
filter(Order==2)%>%
group_by(ItNumber,Pairs)%>%
summarise(MNRT2 = mean(normTime))%>%
ungroup()
RT.orders.blind <- bind_cols(RT.Order1.blind,RT.Order2.blind)%>%
mutate(difference = MNRT1 - MNRT2,
OrderMatters = if_else(difference > (abs(.05)),"T",""))
t.test(RT.orders.blind$MNRT1,RT.orders.blind$MNRT2, paired = T)
sym.rt.matrix.bl<- (matrix.rt.blind + t(matrix.rt.blind))/2
kable(round(sym.rt.matrix.bl,3))
diss.rt.matrix.bl <- 1/sym.rt.matrix.bl
kable(round(diss.rt.matrix.bl,3))
dist.res.acc.bl<-dist(sym.acc.matrix.blind, method = "euclidian")
m <- c( "average", "single", "complete", "ward")
m <- c( "average", "single", "complete", "ward")
names(m) <- c( "average", "single", "complete", "ward")
cluster::agnes(dist.res.acc.bl, method = x)$ac
ac1 <- function(x) {
cluster::agnes(dist.res.acc.bl, method = x)$ac
}
sapply(m, ac1)
dend.acc.bl<- hclust(dist.res.acc.bl, method = "ward.D2")%>%
as.dendrogram()
plot(dend.acc.bl)
dist.res.rt.bl<-dist(diss.rt.matrix.bl, method = "euclidian")
cluster::agnes(dist.res.rt.bl, method = x)$ac
ac2 <- function(x) {
cluster::agnes(dist.res.rt.bl, method = x)$ac
}
sapply(m, ac2)
dend.rt.bl<- hclust(dist.res.rt.bl, method = "ward.D2")%>%
as.dendrogram()
plot(dend.rt.bl)
sym.acc.matrix1.bl<- sym.acc.matrix.blind%>%
gdata::lowerTriangle()%>%
as_data_frame()
fviz_nbclust(sym.acc.matrix1.bl, kmeans, method = "wss") +
geom_vline(xintercept = 4, linetype = 2)+
labs(subtitle = "Elbow method - accuracy")
diss.rt.matrix1.bl<- diss.rt.matrix.bl%>%
gdata::lowerTriangle()%>%
as_data_frame()
fviz_nbclust(diss.rt.matrix1.bl, kmeans, method = "wss") +
geom_vline(xintercept = 4, linetype = 2)+
labs(subtitle = "Elbow method - Rtdiss")
dend.acc4.bl<- dend.acc.bl %>%
set("branches_k_color", value = c( "dodgerblue2", "darkolivegreen3","darkorange2", "darkorchid3"), k = 4)%>%
plot(horiz =F, main = "Accuracy")
dend.rt4.bl<- dend.rt.bl%>%
set("branches_k_color", value = c("darkorchid3", "darkorange2","dodgerblue2" ,"darkolivegreen3"), k = 4)%>%
plot(horiz = F, main = "RT")
cluster_assignments_acc.bl <- cutree(hclust(dist.res.acc.bl, method = "ward.D2"), 4)
cluster_assignments_rt.bl <- cutree(hclust(dist.res.rt.bl, method = "ward.D2"), 4)
BrailleDotsTable <- miceadds::load.Rdata2( filename="BrailleDotsTable.RData")
install.packages(c("dendextend", "factoextra", "gdata", "kableExtra", "miceadds"))
View(CorrectDifferent.norm.blind)
if(!"tinytex" %in% rownames(installed.packages())) install.packages("tinytex")
if(!"tinytex" %in% rownames(installed.packages())) install.packages("tinytex")
tinytex::install_tinytex()
library("papaja")
if(!"devtools" %in% rownames(installed.packages())) install.packages("devtools")
devtools::install_github("crsh/papaja")
library("papaja")
devtools::install_github("crsh/papaja")
#library("papaja")
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
#library("papaja")
library(tidyverse)
library("dendextend")
#library("papaja")
library(tidyverse)
install.packages("backports")
#library("papaja")
library(tidyverse)
library(dendextend)
library(RColorBrewer)
library(factoextra)
library(dplyr)
1400+68+40+50
1400+68+40+50
library("papaja")
#library("papaja")
library(tidyverse)
library(dendextend)
library(RColorBrewer)
library(factoextra)
library(dplyr)
# Seed for random number generation
set.seed(142)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed, warning = FALSE)
BrailleDotsTable <- miceadds::load.Rdata2( filename="BrailleDotsTable.RData")
library("papaja")
#library("papaja")
library(tidyverse)
library(dendextend)
library(RColorBrewer)
library(factoextra)
library(dplyr)
# Seed for random number generation
set.seed(142)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed, warning = FALSE)
BrailleDotsTable <- miceadds::load.Rdata2( filename="BrailleDotsTable.RData")
#library("papaja")
library(tidyverse)
library(dendextend)
library(RColorBrewer)
library(factoextra)
library(dplyr)
library(kableExtra)
#library("papaja")
library(tidyverse)
library(dendextend)
library(RColorBrewer)
library(factoextra)
library(dplyr)
# Seed for random number generation
set.seed(142)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed, warning = FALSE)
BrailleDotsTable <- miceadds::load.Rdata2( filename="BrailleDotsTable.RData")
#library("papaja")
library(tidyverse)
library(dendextend)
library(RColorBrewer)
library(factoextra)
library(dplyr)
library(kableExtra)
ItemNumber <- array(1: 676)
same <- tibble( Pairs = paste (letters, letters))%>%
mutate(Order = 0)
different1<- t(combn(letters, 2))%>%
as_data_frame()%>%
mutate(Pairs = paste(V1, V2),
Order = 1)%>%
select(Pairs, Order)
different2 <- t(combn(letters, 2))%>%
as_data_frame()%>%
mutate(Pairs = paste(V2, V1),
Order = 2)%>%
select(Pairs, Order)
AllStimuli <-  bind_rows(same,different1, different2)%>%
bind_cols(ItemNumber)%>%
rename(ItNumber = "...3")
Rawdata_Sighted_E2 <- miceadds::load.Rdata2( filename="RawData_DePaul.RData")%>%
filter(Experiment == 2,
Key == "m" | Key == "n")%>%
select(-Experiment)%>%
drop_na()%>% #28 NA (2 key presses...)
mutate(Pairs = paste(IT1, IT2))%>%
merge(AllStimuli, by = "Pairs")
OverallAcc_Sighted_perSubject <-  Rawdata_Sighted_E2%>%
group_by(Subject)%>%
summarise(mean(accuracy))%>%
filter(`mean(accuracy)` <.51)
ToRemove <- list(OverallAcc_Sighted_perSubject$Subject) # Participants whose acc < .51
Sighted <- Rawdata_Sighted_E2%>%
filter(Subject != "P46E2" & Subject != "P67E2"  & Subject != "P69E2" & Subject != "P77E2" & Subject != "P89E2") # Removed 1242 observations
Sighted_clean <- Sighted %>%
filter(RT > 0.6)%>%
filter(RT < 12)%>% # removed 179 observations
mutate(rubricC = ifelse(rubric == "m",0.5,-0.5))
#Checking
N_obs_different<- Sighted_clean%>%
filter(rubric=="n")%>%
group_by(IT1,IT2)%>%
count()
min(N_obs_different$n) #14 obs min
#library("papaja")
library(tidyverse)
library(dendextend)
library(RColorBrewer)
library(factoextra)
library(dplyr)
# Seed for random number generation
set.seed(142)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed, warning = FALSE)
BrailleDotsTable <- miceadds::load.Rdata2( filename="BrailleDotsTable.RData")
#library("papaja")
library(tidyverse)
library(dendextend)
library(RColorBrewer)
library(factoextra)
library(dplyr)
library(kableExtra)
ItemNumber <- array(1: 676)
same <- tibble( Pairs = paste (letters, letters))%>%
mutate(Order = 0)
different1<- t(combn(letters, 2))%>%
as_data_frame()%>%
mutate(Pairs = paste(V1, V2),
Order = 1)%>%
select(Pairs, Order)
different2 <- t(combn(letters, 2))%>%
as_data_frame()%>%
mutate(Pairs = paste(V2, V1),
Order = 2)%>%
select(Pairs, Order)
AllStimuli <-  bind_rows(same,different1, different2)%>%
bind_cols(ItemNumber)%>%
rename(ItNumber = "...3")
Rawdata_Sighted_E2 <- miceadds::load.Rdata2( filename="RawData_DePaul.RData")%>%
filter(Experiment == 2,
Key == "m" | Key == "n")%>%
select(-Experiment)%>%
drop_na()%>% #28 NA (2 key presses...)
mutate(Pairs = paste(IT1, IT2))%>%
merge(AllStimuli, by = "Pairs")
OverallAcc_Sighted_perSubject <-  Rawdata_Sighted_E2%>%
group_by(Subject)%>%
summarise(mean(accuracy))%>%
filter(`mean(accuracy)` <.51)
ToRemove <- list(OverallAcc_Sighted_perSubject$Subject) # Participants whose acc < .51
Sighted <- Rawdata_Sighted_E2%>%
filter(Subject != "P46E2" & Subject != "P67E2"  & Subject != "P69E2" & Subject != "P77E2" & Subject != "P89E2") # Removed 1242 observations
Sighted_clean <- Sighted %>%
filter(RT > 0.6)%>%
filter(RT < 12)%>% # removed 179 observations
mutate(rubricC = ifelse(rubric == "m",0.5,-0.5))
#Checking
N_obs_different<- Sighted_clean%>%
filter(rubric=="n")%>%
group_by(IT1,IT2)%>%
count()
min(N_obs_different$n) #14 obs min
## Acc by subjects
Sighted_Same_Acc <- Sighted_clean%>%
filter(rubricC == 0.5)%>%
group_by(Subject)%>%
summarise(MAcc = mean(accuracy))
Sighted_Diff_Acc <- Sighted_clean%>%
filter(rubricC == -0.5)%>%
group_by(Subject)%>%
summarise(MAcc = mean(accuracy))
BayesFactor::ttestBF(Sighted_Same_Acc$MAcc, Sighted_Diff_Acc$MAcc, paired = T) # "same" trials more accurate than "different" trials
## RT by subjects
Sighted_Same_RT <- Sighted_clean%>%
filter(rubricC == 0.5)%>%
group_by(Subject)%>%
summarise(MRT = mean(RT))
Sighted_Diff_RT <- Sighted_clean%>%
filter(rubricC == -0.5)%>%
group_by(Subject)%>%
summarise(MRT = mean(RT))
BayesFactor::ttestBF(Sighted_Same_RT$MRT, Sighted_Diff_RT$MRT, paired = T) # no difference in RT between "same" and "different" trials
Different_sighted<- Sighted_clean%>%
filter(rubric == "n")
matrix.acc.sighted<-tapply(Different_sighted$accuracy, list(Different_sighted$IT1, Different_sighted$IT2),mean)%>%
round(3)
# Check if it's ok making it symmetric
sym.acc.matrix.sighted <- (matrix.acc.sighted + t(matrix.acc.sighted))/2
#write.table((round(sym.acc.matrix.sighted,3)), 'M.csv', col.names=NA)
#library("papaja")
library(tidyverse)
library(dendextend)
library(RColorBrewer)
library(factoextra)
library(dplyr)
# Seed for random number generation
set.seed(142)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed, warning = FALSE)
BrailleDotsTable <- miceadds::load.Rdata2( filename="BrailleDotsTable.RData")
#library("papaja")
library(tidyverse)
library(dendextend)
library(RColorBrewer)
library(factoextra)
library(dplyr)
library(kableExtra)
ItemNumber <- array(1: 676)
same <- tibble( Pairs = paste (letters, letters))%>%
mutate(Order = 0)
different1<- t(combn(letters, 2))%>%
as_data_frame()%>%
mutate(Pairs = paste(V1, V2),
Order = 1)%>%
select(Pairs, Order)
different2 <- t(combn(letters, 2))%>%
as_data_frame()%>%
mutate(Pairs = paste(V2, V1),
Order = 2)%>%
select(Pairs, Order)
AllStimuli <-  bind_rows(same,different1, different2)%>%
bind_cols(ItemNumber)%>%
rename(ItNumber = "...3")
Rawdata_Sighted_E2 <- miceadds::load.Rdata2( filename="RawData_DePaul.RData")%>%
filter(Experiment == 2,
Key == "m" | Key == "n")%>%
select(-Experiment)%>%
drop_na()%>% #28 NA (2 key presses...)
mutate(Pairs = paste(IT1, IT2))%>%
merge(AllStimuli, by = "Pairs")
OverallAcc_Sighted_perSubject <-  Rawdata_Sighted_E2%>%
group_by(Subject)%>%
summarise(mean(accuracy))%>%
filter(`mean(accuracy)` <.51)
ToRemove <- list(OverallAcc_Sighted_perSubject$Subject) # Participants whose acc < .51
Sighted <- Rawdata_Sighted_E2%>%
filter(Subject != "P46E2" & Subject != "P67E2"  & Subject != "P69E2" & Subject != "P77E2" & Subject != "P89E2") # Removed 1242 observations
Sighted_clean <- Sighted %>%
filter(RT > 0.6)%>%
filter(RT < 12)%>% # removed 179 observations
mutate(rubricC = ifelse(rubric == "m",0.5,-0.5))
#Checking
N_obs_different<- Sighted_clean%>%
filter(rubric=="n")%>%
group_by(IT1,IT2)%>%
count()
min(N_obs_different$n) #14 obs min
## Acc by subjects
Sighted_Same_Acc <- Sighted_clean%>%
filter(rubricC == 0.5)%>%
group_by(Subject)%>%
summarise(MAcc = mean(accuracy))
Sighted_Diff_Acc <- Sighted_clean%>%
filter(rubricC == -0.5)%>%
group_by(Subject)%>%
summarise(MAcc = mean(accuracy))
BayesFactor::ttestBF(Sighted_Same_Acc$MAcc, Sighted_Diff_Acc$MAcc, paired = T) # "same" trials more accurate than "different" trials
## RT by subjects
Sighted_Same_RT <- Sighted_clean%>%
filter(rubricC == 0.5)%>%
group_by(Subject)%>%
summarise(MRT = mean(RT))
Sighted_Diff_RT <- Sighted_clean%>%
filter(rubricC == -0.5)%>%
group_by(Subject)%>%
summarise(MRT = mean(RT))
BayesFactor::ttestBF(Sighted_Same_RT$MRT, Sighted_Diff_RT$MRT, paired = T) # no difference in RT between "same" and "different" trials
Different_sighted<- Sighted_clean%>%
filter(rubric == "n")
matrix.acc.sighted<-tapply(Different_sighted$accuracy, list(Different_sighted$IT1, Different_sighted$IT2),mean)%>%
round(3)
# Check if it's ok making it symmetric
sym.acc.matrix.sighted <- (matrix.acc.sighted + t(matrix.acc.sighted))/2
#write.table((round(sym.acc.matrix.sighted,3)), 'M.csv', col.names=NA)
CorrectDifferent.norm.sighted<- Different_sighted%>%
filter(accuracy == 1)%>%
mutate(RTms = RT*1000)%>%
group_by(Subject)%>%
mutate(MRT_subj = mean(RTms))%>%
ungroup()%>%
mutate(normTime = RTms/MRT_subj)
#Normalizing RTs so mean RT = 1 per subject (as in Courrieu et al., 2004 & Wiley et al., 2016)
matrix.rt.sighted<-tapply(CorrectDifferent.norm.sighted$normTime, list(CorrectDifferent.norm.sighted$IT1, CorrectDifferent.norm.sighted$IT2),mean)%>%
round(3)
sym.rt.matrix.sighted <- (matrix.rt.sighted + t(matrix.rt.sighted))/2
kable(round(sym.rt.matrix.sighted,3))
#Transform similarity matrix it into a dissimilarity matrix:
diss.rt.matrix.sighted <- 1/sym.rt.matrix.sighted
kable(round(diss.rt.matrix.sighted,3))
#write.table((round(diss.rt.matrix.sighted,3)), 'RT_matrix.csv', col.names=NA)
# ACCURACY
## Euclidian method (because of previous articles):
dist.res.acc.sighted<-dist(sym.acc.matrix.sighted, method = "euclidian")
## What linkage method to use
### define linkage methods
m <- c( "average", "single", "complete", "ward")
names(m) <- c( "average", "single", "complete", "ward")
### function to compute agglomerative coefficient:
ac1 <- function(x) {
cluster::agnes(dist.res.acc.sighted, method = x)$ac
}
### calculate agglomerative coefficient for each clustering linkage method
sapply(m, ac1)
## we'll use ward's method (Note that agnes(*, method="ward") corresponds to hclust(*, "ward.D2"))
dend.acc.sighted<- hclust(dist.res.acc.sighted, method = "ward.D2")%>%
as.dendrogram()
plot(dend.acc.sighted)
order.hclust(hclust(dist.res.acc.sighted, method = "ward.D2"))
# RT
dist.res.rt.sighted<-dist(diss.rt.matrix.sighted, method = "euclidian")
## What linkage method to use
ac2 <- function(x) {
cluster::agnes(dist.res.rt.sighted, method = x)$ac
}
sapply(m, ac2)
## we'll use ward's method
dend.rt.sighted<- hclust(dist.res.rt.sighted, method = "ward.D2")%>%
as.dendrogram()
plot(dend.rt.sighted)
## Optimal number of clusters
sym.acc.matrix1.sigh<- sym.acc.matrix.sighted%>%
gdata::lowerTriangle()%>%
as_data_frame()
fviz_nbclust(sym.acc.matrix1.sigh, kmeans, method = "wss") +
geom_vline(xintercept = 4, linetype = 2)+
labs(subtitle = "Elbow method - accuracy")
diss.rt.matrix1.sigh<- diss.rt.matrix.sighted%>%
gdata::lowerTriangle()%>%
as_data_frame()
fviz_nbclust(diss.rt.matrix1.sigh, kmeans, method = "wss") +
geom_vline(xintercept = 4, linetype = 2)+
labs(subtitle = "Elbow method - Rtdiss")
## 4 (both accuracy & rt)
install.packages("performance")
RawdataBF <- miceadds::load.Rdata2( filename="RawdataBF.RData")
CleanBF <- miceadds::load.Rdata2( filename="CleanBF.RData")
BrailleDotsTable <- miceadds::load.Rdata2( filename="BrailleDotsTable.RData")
107-80
pchisq(27,4)
pchisq(``,4)
pchisq(27,40)
